# This script is a deobfuscator for CVE-2021-40444 exploit file side.html (SHA-256: d0fd7acc38b3105facd6995344242f28e45f5384c0fdf2ec93ea24bfbc1dc9e6)
# File can be downloaded from here: https://bazaar.abuse.ch/sample/d0fd7acc38b3105facd6995344242f28e45f5384c0fdf2ec93ea24bfbc1dc9e6
# This is a slightly modified file, used in folllowing video: https://www.youtube.com/watch?v=Oz16xte5UeU
# Author: Lasq - https://twitter.com/lasq88

import re

# replacement function, that is being used to replace instances of "hashed string" function with a proper string from the list:

def replacement(matchobj):
    return "'" + rotated[int(matchobj.group(1),16) - 170] + "'"

# array rotation function, checks the checksum and rotates the array as long as it's not correct, similar to what JS does in the original file:

def rotate(array,csum,eq):
    temp_array = array
    while(True):
        try:
            numbers = [re.match(r"[0-9]{1,}",term).group(0) for term in [temp_array[int(x,16) - 170] for x in re.findall(r"\((0x[a-f0-9]{1,3})\)",eq)]]
            operators = re.findall(r"[+*-]{1,2}",eq)
            nsum = []
            for n in range(len(operators)):
                nsum.append(numbers[n])
                nsum.append(operators[n])
            nsum.append(numbers[-1])
            if (eval(''.join(nsum)) == csum):
                return temp_array
            else:
                temp_array = temp_array[-1:] + temp_array[:-1]
        except:
            temp_array = temp_array[-1:] + temp_array[:-1]



# Opening the file and parsing the javascript code (in the video I used the CyberChef JS beautifier, you can use it too if you want a clearer code, here I am doing all on a original, not beautified script):

f_in = open("side.html", "r") #obfuscated file
f_out = open("side_deobfuscated.html", "w") #file we will write the deobfuscated code into

lines = f_in.readlines()

deobfuscated = ""

# Below I implemented a list rotation to avoid dynamic analysis of the JS and copy-pasting of the list. This is slightly different technique that the one used in the video.
# If you want the exact same file as in the video just comment out first 4 lines after else statement and use already rotated list:
# rotated = ["#version=5,0,0,0","ssi","iframe","748708rfmUTk","documentElement","lFile","location","159708hBVRtu","a/Lo","Script","document","call","contentWindow","emp","Document","Obj","prototype","lfi","bject","send","appendChild","Low/championship.inf","htmlfile","115924pLbIpw","GET","p/championship.inf","1109sMoXXX","./../A","htm","l/T","cal/","1wzQpCO","ect","w/championship.inf","522415dmiRUA","http://hidusi.com/e8c76295a5f9acb7/ministry.cab","88320wWglcB","XMLHttpRequest","championship.inf","Act","D:edbc374c-5730-432a-b5b8-de94f0b57217","open","<bo","HTMLElement","/..","veXO","102FePAWC","123","365952KMsRQT","tiveX","/Lo","./../../","contentDocument","ppD","Dat","close","Acti","removeChild","mlF","write","./A","ata/","ile","../","body","setAttribute"]

for line in lines:
    if(re.match(r"^\s*<",line)):
        deobfuscated += line
    else:
        unrotated = eval(re.search(r"var [a-z0-9_]{1,10}=(\[[^\]]*\])",line).group(1))
        checksum = int(re.search(r"[,(](0x[a-f0-9]{3,})[),]",line).group(1),16)
        equation = re.search(r"parseInt[^;]*",line).group(0)
        rotated = rotate(unrotated,checksum,equation)
        repl = line.replace(";",";\n")
        repl = re.sub(r'_0x1eac90\((0x[a-f0-9]{1,3})\)', replacement, repl)
        repl = re.sub(r'_0x2ee207\((0x[a-f0-9]{1,3})\)', replacement, repl)
        repl = re.sub(r'_0x45ae57\((0x[a-f0-9]{1,3})\)', replacement, repl)
        repl = repl.replace('_0xd7e33d+_0x371a71+_0x487bfa', "'cpl'")
        repl = repl.replace("'+'", "")
        deobfuscated += repl

f_out.write(deobfuscated)

f_in.close()
f_out.close()